{"version":3,"sources":["components/Header/Header.js","components/DisplayWinner/DisplayWinner.js","components/DisplayWinner/index.js","components/ResetButton/ResetButton.js","components/ResetButton/index.js","data/actions.js","components/GameLog/GameLog.js","components/GameLog/index.js","components/Player/Player.js","components/Player/Player1.js","components/Player/Player2.js","components/Settings/Settings.js","components/Settings/index.js","components/ResetSettingsButton/ResetSettingsButton.js","components/ResetSettingsButton/index.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducers.js","index.js"],"names":["Header","react_default","a","createElement","className","DisplayWinner","_ref","winner","p1Name","p2Name","connect","state","ResetButton","handleReset","onClick","dispatch","type","GameLog","history","scope","map","index","key","Player","player1Serving","score","handlePlayerIncrement","name","player1","player2","Settings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","winningScore","alternateEvery","handleChangeP1Name","bind","assertThisInitialized","handleChangeP2Name","handleChangeWinningScore","handleChangeAlternateEvery","handleSubmit","e","setState","currentTarget","value","preventDefault","submitSettings","_this$state","onSubmit","onChange","Component","ResetSettingsButton","App","settingsCompleted","Fragment","components_Header_Header","Player1","Player2","components_DisplayWinner","components_ResetButton","components_ResetSettingsButton","components_GameLog","components_Settings","initial","server","objectSpread","tieBreak","addToHistory","concat","toConsumableArray","reducers","action","winnerPlayer1","incrementPlayer1","winnerPlayer2","incrementPlayer2","objectWithoutProperties","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.94f53f53.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n\r\n    <header className=\"page-header\">\r\n          <h1>PingPong</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst DisplayWinner = ({ winner, p1Name, p2Name }) => winner === 0 ? null : ( \r\n\r\n       <h2 className=\"jumbotron dark-text App\">{winner === 1 ? p1Name : p2Name} wins!</h2>\r\n);\r\n\r\nexport default DisplayWinner;","import { connect } from \"react-redux\";\r\nimport DisplayWinner from \"./DisplayWinner\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        winner: state.winner,\r\n        p1Name: state.p1Name,\r\n        p2Name: state.p2Name,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DisplayWinner);","import React from 'react';\r\n\r\nconst ResetButton = ({ \r\n    handleReset\r\n}) => (\r\n\r\n     <button \r\n        className=\"btn btn-danger\"\r\n        onClick={handleReset}\r\n      >\r\n      Reset</button>\r\n      \r\n)\r\n\r\nexport default ResetButton;","import { connect } from \"react-redux\";\r\nimport ResetButton from \"./ResetButton\";\r\nimport { reset } from \"../../data/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleReset: () => dispatch(reset()),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ResetButton);\r\n","\r\nexport const handlePlayer1Increment = () => {\r\n    return {\r\n        type: \"incrementPlayer1\" ,\r\n    };\r\n};\r\n   \r\nexport const handlePlayer2Increment = () => {\r\n    return {\r\n        type: \"incrementPlayer2\" ,\r\n    };\r\n};\r\n   \r\nexport const reset = () => {\r\n    return {\r\n      type: \"reset\",\r\n    };\r\n};\r\n\r\nexport const submit = ({p1Name, p2Name, winningScore, alternateEvery }) => {\r\n    return {\r\n        type: \"submit\",\r\n        p1Name,\r\n        p2Name,\r\n        winningScore,\r\n        alternateEvery,\r\n    };\r\n};\r\n\r\nexport const resetSettings = () => {\r\n    return {\r\n      type: \"resetSettings\",\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst GameLog = ({ \r\n    history\r\n}) => (\r\n      \r\n      <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">History</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        { history.map(index => (\r\n            <tr key={index}>\r\n                <th scope=\"row\">#</th>\r\n                        <td>{ index }</td>      \r\n            </tr>\r\n            ))}  \r\n        </tbody>\r\n    </table>\r\n)\r\n\r\nexport default GameLog;","import { connect } from \"react-redux\";\r\nimport GameLog from \"./GameLog\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        history: state.history\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameLog);","import React from 'react';\r\n\r\nconst Player = ({ \r\n    player1Serving, \r\n    score, \r\n    winner,\r\n    handlePlayerIncrement, \r\n    name \r\n}) => (\r\n\r\n    <div className=\"col-xs-6\">\r\n        <p>{name} {player1Serving &&\r\n            <span className=\"pull-right label label-primary\">Serving</span>\r\n            }\r\n        </p> \r\n        \r\n        <p className=\"well dark-text\">{ score }</p>\r\n\r\n        {winner === 0 ? \r\n        <button \r\n        onClick={handlePlayerIncrement} \r\n        className=\"btn btn-primary\"\r\n        >+\r\n        </button> : null}\r\n    </div>\r\n)\r\n\r\nexport default Player;","import { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\nimport { handlePlayer1Increment } from \"../../data/actions\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        score: state.player1,\r\n        player1Serving: state.player1Serving,\r\n        winner: state.winner,\r\n        history: state.history, \r\n        name: state.p1Name,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handlePlayerIncrement: () => dispatch(handlePlayer1Increment()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","import { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\nimport { handlePlayer2Increment } from \"../../data/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        score: state.player2,\r\n        player1Serving: !state.player1Serving,\r\n        winner: state.winner,\r\n        history: state.history,\r\n        name: state.p2Name,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handlePlayerIncrement: () => dispatch(handlePlayer2Increment()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        p1Name: \"\",\r\n        p2Name: \"\",\r\n        winningScore: 21,\r\n        alternateEvery: 5,\r\n    };\r\n\r\n    this.handleChangeP1Name = this.handleChangeP1Name.bind(this);\r\n    this.handleChangeP2Name = this.handleChangeP2Name.bind(this);\r\n    this.handleChangeWinningScore = this.handleChangeWinningScore.bind(this);\r\n    this.handleChangeAlternateEvery = this.handleChangeAlternateEvery.bind(this);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChangeP1Name(e) {\r\n    this.setState({ p1Name: e.currentTarget.value });\r\n  }\r\n\r\n  handleChangeP2Name(e) {\r\n    this.setState({ p2Name: e.currentTarget.value });\r\n  }\r\n\r\n  handleChangeWinningScore(e) {\r\n    this.setState({ winningScore: e.currentTarget.value });\r\n  }\r\n\r\n  handleChangeAlternateEvery(e) {\r\n    this.setState({ alternateEvery: e.currentTarget.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.submitSettings(this.state);\r\n  }\r\n\r\n  render() {\r\n    let { p1Name, p2Name, winningScore, alternateEvery } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={ this.handleSubmit }>\r\n        <div className=\"form-group\">\r\n          <label>Player 1 Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={ this.handleChangeP1Name }\r\n            value={ p1Name }\r\n            type=\"text\"\r\n          />\r\n          <label>Player 2 Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={ this.handleChangeP2Name }\r\n            value={ p2Name }\r\n            type=\"text\"\r\n          />\r\n          <label>Winning Score</label>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={ this.handleChangeWinningScore }\r\n            value={ winningScore }\r\n            type=\"number\"\r\n          />\r\n          <label>Alternate Every</label>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={ this.handleChangeAlternateEvery }\r\n            value={ alternateEvery }\r\n            type=\"number\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\">Start Game</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;","import { connect } from \"react-redux\";\r\nimport Settings from \"./Settings\";\r\nimport { submit } from \"../../data/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    p1Name: state.p1Name,\r\n    p2Name: state.p1Name,\r\n    winningScore: state.winningScore,\r\n    alternateEvery: state.alternateEvery,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitSettings: (state) => dispatch(submit(state)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst ResetSettingsButton = ({ \r\n    handleReset\r\n}) => (\r\n\r\n     <button \r\n        className=\"btn btn-primary reset-settings-button\"\r\n        onClick={handleReset}\r\n      >\r\n      Reset Settings</button>\r\n      \r\n)\r\n\r\nexport default ResetSettingsButton;","import { connect } from \"react-redux\";\r\nimport ResetSettingsButton from \"./ResetSettingsButton\";\r\nimport { resetSettings } from \"../../data/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleReset: () => dispatch(resetSettings()),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ResetSettingsButton);\r\n","import React from 'react';\nimport Header from '../Header/Header.js';\nimport DisplayWinner from '../DisplayWinner';\nimport ResetButton from '../ResetButton';\nimport GameLog from '../GameLog';\nimport Player1 from '../Player/Player1';\nimport Player2 from '../Player/Player2';\nimport Settings from '../Settings/';\nimport ResetSettingsButton from '../ResetSettingsButton';\n\nconst App = ( {settingsCompleted} ) => (\n\n  <React.Fragment>\n    \n      <Header/>\n\n      { settingsCompleted ?\n      <React.Fragment>\n        <div className=\"row\">\n            <Player1\n              name=\"Player 1\"\n            />\n\n            <Player2\n              name=\"Player 2\"\n            />\n        </div>\n\n        <DisplayWinner />\n        <hr />\n\n        <ResetButton/>\n        <ResetSettingsButton/>\n\n        <GameLog />\n      </React.Fragment>\n      \n      : <Settings /> \n      }\n\n  </React.Fragment>\n);\nexport default App;\n","import { connect } from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    settingsCompleted: state.settingsCompleted,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(App);","\r\nconst initial = {\r\n    player1: 0,\r\n    player2: 0,\r\n    player1Serving: true,\r\n    winner: 0,\r\n    history: [],\r\n    settingsCompleted: false,\r\n    p1Name: \"\",\r\n    p2Name: \"\",\r\n    winningScore: 21,\r\n    alternateEvery: 5,\r\n};\r\n\r\nexport default initial;","\r\nconst incrementPlayer1 = (state) => {\r\n    return { ...state, player1: state.player1 + 1 };\r\n};\r\n\r\nconst incrementPlayer2 = (state) => {\r\n    return { ...state, player2: state.player2 + 1 };\r\n};\r\n    \r\nconst server = (state) => {\r\n    return ((state.player1 + state.player2) % state.alternateEvery === 0) ? { ...state, player1Serving: state.player1Serving = !state.player1Serving } : state;\r\n};\r\n\r\nconst tieBreak = (state) => {\r\n    return ((state.player1 >= state.winningScore) && (state.player1 + state.player2) % 2 === 0) ? { ...state, player1Serving: state.player1Serving = !state.player1Serving } : state;\r\n};\r\n\r\nconst winnerPlayer1 = (state) => {\r\n    return state.player1 >= state.winningScore && (state.player1 - state.player2) > 1  ? {...state, winner: state.winner = 1} : state;\r\n}\r\n\r\nconst winnerPlayer2 = (state) => {\r\n    return state.player2 >= state.winningScore  && (state.player2 - state.player1) > 1 ? {...state, winner: state.winner = 2} : state;\r\n}\r\n\r\nconst addToHistory = (state) => {\r\n    return state.winner === 1 || state.winner === 2 ?{...state, history: [...state.history, `${state.p1Name} = ${state.player1} | ${state.p2Name} = ${state.player2}`]} : state;\r\n}\r\n\r\nconst submitSettings = (state, {type, ...action}) => ({...state, ...action})\r\n\r\nconst settingsCompleted = (state) => {\r\n    return { ...state, settingsCompleted: true };\r\n}\r\n\r\n\r\nconst reducers = (state, action) => {\r\n    switch (action.type) {\r\n        case \"incrementPlayer1\": return addToHistory(winnerPlayer1(tieBreak(server(incrementPlayer1(state)))));\r\n        case \"incrementPlayer2\": return addToHistory(winnerPlayer2(tieBreak(server(incrementPlayer2(state)))));\r\n        case \"reset\": return {...state, player1: 0,\r\n                                        player2: 0,\r\n                                        player1Serving: true,\r\n                                        winner:0};\r\n        case \"submit\": return settingsCompleted(submitSettings(state, action));\r\n        case \"resetSettings\": return {...state, settingsCompleted: false};\r\n        default: return state; \r\n    }\r\n};\r\n\r\nexport default reducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/';\nimport './index.css';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport initial from \"./data/initial\";\nimport reducers from \"./data/reducers\";\n\n\nconst store = createStore(\n    reducers,\n    initial,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\n\nReactDOM.render(\n    <Provider store={ store }>\n       \n        <body>\n            <App />\n        </body>\n        \n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}